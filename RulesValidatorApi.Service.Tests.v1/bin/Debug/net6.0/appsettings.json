{
  "SwaggerOptions": {
    "JsonRoute": "swagger/{documentName}/swagger.json",
    "Description": "RulesValidator API",
    "UIEndPoint": "v1/swagger.json"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "MaxNumberOfResponse": 50,
  "RuleSetCsvValidation": [
    {
      "Name": "Delimiter",
      "Description": "You can choose the cells delimiter.",
      "Example":"Delimiter=, or Delimiter=; ",
      "ArgumentRegex":"[\\,\\;]",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsDelimiterSpecified"
    },
    {
      "Name": "Empty",
      "Description": "The cell can be empty",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsEmpty"
    },
    {
      "Name": "Integer",
      "Description": "The cell value is an integer. Number without a decimal value",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsInteger"
    },
    {
      "Name": "Number",
      "Description": "The cell value is a number. You can specify the maximum decimal place value",
      "Example": "Number=2 Number=3 Number=4",
      "ArgumentRegex":"[0-9]",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsNumber"
    },
    {
      "Name": "Date",
      "Description": "The cell is a date. You can specify the format",
      "Example": "Date=DD/MM/YYYY Date=YYYY/MM/DD",
      "ArgumentRegex":"[dDMmyY\\/\\-]*",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsSpecificDateFormat"
    },
    {
      "Name": "RangeNumber",
      "Description": "The cell value is a number/integer in the specified range of value.",
      "Example": "RangeNumber=[0-100] RangeNumber=+ RangeNumber=-",
      "ArgumentRegex":"",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsNumberInSpecificRange"
    },
    {
      "Name": "UpperCaseString",
      "Description": "The cell value is a string in upper case",            
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsUpperCaseString"
    },
    {
      "Name": "LowerCaseString",
      "Description": "The cell value is a string in lower case",            
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsLowerCaseString"
    },
    {
      "Name": "Boolean",
      "Description": "The cell value is a boolean",            
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsBoolean"
    },
    {
      "Name": "SpecificValue",
      "Description": "The cell value is contained in a specified list",
      "Example": "SpecificValue in list (EUR,USD,AUD)",
      "ArgumentRegex":"^(EUR|USD|AUD)$",           
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.IsCaseSensitiveStringFromSpecifiedList"
    },
    {
      "Name": "StartValidation",
      "Description": "The csv file validation start from n line",
      "Example": "StartValidation=10 or StartValidation=100",
      "ArgumentRegex":"^\\d+$",           
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.HasValidationStartedFrom"
    },
    {
      "Name": "ValidatedBy",
      "Description": "The cell follow a specific regex",
      "Example": "ValidatedBy=^[A-Z][a-z]+$",
      "ArgumentRegex":".+",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.HasValidationStartedFrom"
    },
    {
      "Name": "KeyValuesSeparator",
      "Description": "The cell is a list of key values with list separator and key/value separator",
      "Example": "KeyValuesSeparator=|",
      "ArgumentRegex":"^\\W{1}$",
      "ClassName": "RulesValidatorApi.Service.Rules.CsvFileCellRules.HasValidationStartedFrom"
    }
  ],
  "AllowedHosts": "*"
}